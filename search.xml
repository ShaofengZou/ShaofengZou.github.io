<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>刘亦菲</title>
      <link href="/2019/09/26/%E5%88%98%E4%BA%A6%E8%8F%B2/"/>
      <url>/2019/09/26/%E5%88%98%E4%BA%A6%E8%8F%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="oh-my-God"><a href="#oh-my-God" class="headerlink" title="oh my God"></a>oh my God</h3><a id="more"></a><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1g9wbe4fmgbj31hc0xctoz.jpg"></p><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1g9wbh2fqrmj31hc0xch26.jpg"></p><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1g9wbh2q8tgj31hc0xcqlc.jpg"></p><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1g9wbh2g2woj31hc0xcnaf.jpg"></p><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1g9wbh2i9c5j31hc0xc17y.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Blind Denoising Method</title>
      <link href="/2019/09/26/Blind-Denoising-Method/"/>
      <url>/2019/09/26/Blind-Denoising-Method/</url>
      
        <content type="html"><![CDATA[<h2 id="A-CNN-Based-Blind-Denoising-Method-for-Endoscopic-Images"><a href="#A-CNN-Based-Blind-Denoising-Method-for-Endoscopic-Images" class="headerlink" title="A CNN-Based Blind Denoising Method for Endoscopic Images"></a>A CNN-Based Blind Denoising Method for Endoscopic Images</h2><a id="more"></a><h2 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h2><p align="center"> <img src="http://i1.fuimg.com/700288/6b77caa83f0d8804.png" width="50%"></p><h2 id="Blind-Denosing-Network"><a href="#Blind-Denosing-Network" class="headerlink" title="Blind Denosing Network"></a>Blind Denosing Network</h2><p align="center"> <img src="http://i1.fuimg.com/700288/312d0425c58480fe.png" width="50%"></p><h2 id="Blind-Image-Quality-Assessment-Network"><a href="#Blind-Image-Quality-Assessment-Network" class="headerlink" title="Blind Image Quality Assessment Network"></a>Blind Image Quality Assessment Network</h2><p align="center"> <img src="http://i2.tiimg.com/700288/e46fc902144e04b5.jpg" width="50%"></p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><blockquote><p>The quality of images captured by wireless capsule endoscopy (WCE) is key for doctors to diagnose diseases of gastrointestinal (GI) tract. However, there exist many low-quality endoscopic images due to the limited illumination and complex environment in GI tract. After an enhancement process, the severe noise become an unacceptable problem. The noise varies with different cameras, GI tract environments and image enhancement. And the noise model is hard to be obtained. This paper proposes a convolutional blind denoising network for endoscopic images. We apply Deep Image Prior (DIP) method to reconstruct a clean image iteratively using a noisy image without a specific noise model and ground truth. Then we design a blind image quality assessment network based on MobileNet to estimate the quality of the reconstructed images. The estimated quality is used to stop the iterative operation in DIP method. The number of iterations is reduced about 36% by using transfer learning in our DIP process. Experimental results on endoscopic images and real-world noisy images demonstrate the superiority of our proposed method over the state-of-the-art methods in terms of visual quality and quantitative metrics.</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android Style Transfer</title>
      <link href="/2019/09/26/Android-Style-Transfer/"/>
      <url>/2019/09/26/Android-Style-Transfer/</url>
      
        <content type="html"><![CDATA[<h2 id="Android-Style-Transfer"><a href="#Android-Style-Transfer" class="headerlink" title="Android-Style-Transfer"></a>Android-Style-Transfer</h2><p>An Android app built with an artistic style transfer neural network</p><a id="more"></a><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Artistic style transfer help you creat exciting image with sytle you like. It need two input images: one representing the artistic style and one representing the content.</p><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1ga478npx6xj319z0ftx5m.jpg" width="50%"></p><p>This project implement style transfer on Android platfrom. It contains two parts including training style model on computer using python and deploy the model to the moblie phone with Android Studio.</p><p>The app can be download via <a href="https://pan.baidu.com/s/10pMQnKWoPmTdra1GovThqg" target="_blank" rel="noopener">BaiduCloud</a></p><p align="center"> <img src="http://ww1.sinaimg.cn/large/007IF2qIly1ga477txrnnj30tr1lzkjl.jpg" width="30%"></p><h2 id="Part-I-Style-Model-Training"><a href="#Part-I-Style-Model-Training" class="headerlink" title="Part I. Style Model Training"></a>Part I. Style Model Training</h2><h3 id="Step1-Download-dataset-and-pretrained-VGG-model"><a href="#Step1-Download-dataset-and-pretrained-VGG-model" class="headerlink" title="Step1. Download dataset and pretrained VGG model"></a>Step1. Download dataset and pretrained VGG model</h3><ul><li><a href="http://msvocds.blob.core.windows.net/coco2014/train2014.zips" target="_blank" rel="noopener">COCO dataset (about 12GB)</a>    </li><li><a href="http://www.vlfeat.org/matconvnet/pretrained/" target="_blank" rel="noopener">VGG pre-trained model</a>    </li></ul><p>Unzip the train2014.zip and put the folder <code>train2014</code> and <code>imagenet-vgg-verydeep-19.mat</code> to the <code>data</code> folder</p><h3 id="Step2-Train-model"><a href="#Step2-Train-model" class="headerlink" title="Step2. Train model"></a>Step2. Train model</h3><p>The training code refers to <a href="https://github.com/GuidoPaul/Android-Tensorflow-Style-Transfer" target="_blank" rel="noopener">@GuidoPaul</a></p><p><code>python style-transfer.py --style images/styles/wave.jpg --test images/test/test.jpg</code> <br></p><p>It takes about 3 to 4 hours to train on TITAN XP.</p><p>The trained model is saved in <strong>checkpoint</strong> folder and the converted pb model file is saved in <strong>model</strong> file.</p><p>You can download the pretrained model trained by images/styled/wave.jpg via <a href="https://pan.baidu.com/s/10pMQnKWoPmTdra1GovThqg" target="_blank" rel="noopener">BaiduCloud</a></p><h3 id="Step3-Evaluate"><a href="#Step3-Evaluate" class="headerlink" title="Step3. Evaluate"></a>Step3. Evaluate</h3><p><code>python test_pb_file.py --model_name model/style_graph_frozen.pb --test_image images/test/test2.jpg</code> <br></p><p>Run to see the input and output node and tensor size of trained model which are important for the setting on Andoird.</p><h2 id="Part-II-Android-Setup"><a href="#Part-II-Android-Setup" class="headerlink" title="Part II. Android Setup"></a>Part II. Android Setup</h2><p>After traning style model using python, we need deploy the trained model on android.</p><p>To run this project, you need put the pre-trained pb modol file to <code>Part2_Android_Project\Style_Transfer\app\src\main\assets</code> download via <a href="https://pan.baidu.com/s/10pMQnKWoPmTdra1GovThqg" target="_blank" rel="noopener">BaiduCloud</a></p><p>To add your trained model, you need to follow these steps:</p><h3 id="Step1-Add-style-image"><a href="#Step1-Add-style-image" class="headerlink" title="Step1. Add style image"></a>Step1. Add style image</h3><ol><li>Add the style image to the folder <code>Part2_Android_Project\Style_Transfer\app\src\main\res\drawable</code></li><li>Create style object to the function <code>initStyles()</code> at line <strong>653</strong> in <strong>MainActivity.java</strong></li></ol><h3 id="Step2-Add-style-model"><a href="#Step2-Add-style-model" class="headerlink" title="Step2. Add style model"></a>Step2. Add style model</h3><ol><li>Add the style model to the folder <code>Part2_Android_Project\Style_Transfer\app\src\main\assets</code></li><li>Add this model to <code>pu_list</code> at Line <strong>73</strong> in <strong>MainActivity.java</strong></li></ol><p>If you like it, welcome to <strong>fork</strong> and <strong>star</strong> ^_^</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
